/*
 * defines.h
 *
 *  Created on: 22 дек. 2017 г.
 *      Author: root
 */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __DEFINES_H
#define __DEFINES_H

// Если мы определяем макрос LED_MATRIX_ENABLE, то тем самым подрубаем в проекте работу
// с LED-матрицу 8x8
//#define LED_MATRIX_ENABLE

// Если мы определяем макрос AUDIO_ENABLE, то тем самым подрубаем в проект возможность
// воспроизводить голосовое сообщение
#define AUDIO_ENABLE

// Если мы определяем макрос LCD_ENABLE, то тем самым подрубаем в проект возможность
// выводить сообщения на LCD
#define LCD_ENABLE

// Если мы определяем макрос WS2812B_ENABLE, то тем самым подрубаем в проект возможность
// работы с управляемыми светодиодами WS2812B
#define WS2812B_ENABLE

/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*---------------------------------MODE---------------------------------------*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
#define SYSTEM_MODE_NORMAL		0
#define SYSTEM_MODE_DEMO		1
#define SYSTEM_MODE_UPDATE		2
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/


/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*--------------------------------FLASH---------------------------------------*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/* Дефайны для записи во вфлеш по порядку
 * // Значение, которое должно быть в месте записи занятого места, чтобы включился
// демо-режим
#define MEM_STATUS 				(state == 0xFFFFFFFF)
// Адрес начальной страницы в памяти, а также
// адрес места в памяти для хранения занятого на соревнованиях места
#define START_FLASH_PAGE       	0x801A000
// Адрес места в памяти для хранения размера Text1
#define SIZE_TEXT1_address     	(START_FLASH_PAGE + 0x00000004)
// Адрес места в памяти для хранения Text1
#define TEXT1_address          	(START_FLASH_PAGE + 0x00000008)
// Адрес места в памяти для хранения размера Text2
#define SIZE_TEXT2_address     	(START_FLASH_PAGE + 0x00000008 + formalSizeText1)
// Адрес места в памяти для хранения Text2
#define TEXT2_address          	(START_FLASH_PAGE + 0x0000000C + formalSizeText1)
// Адрес места в памяти для хранения количества фреймов(для аудиофайла)
#define BLOCK_address          	(START_FLASH_PAGE + 0x0000000C + formalSizeText1 + formalSizeText2)
// Адрес места в памяти для хранения аудиофайла
#define SPEEX_address          	(START_FLASH_PAGE + 0x00000010 + formalSizeText1 + formalSizeText2)
*/

// Значение, которое должно быть в месте записи занятого места, чтобы включился
// демо-режим
#define MEM_STATUS 				(state == 0xFFFFFFFF)
// Адрес начальной страницы в памяти, а также
// адрес места в памяти для хранения занятого на соревнованиях места
#define START_FLASH_PAGE       	0x801A000
// Адрес места в памяти для хранения размера Text1
#define SIZE_TEXT1_address     	0x801A004
// Адрес места в памяти для хранения Text1
#define TEXT1_address          	0x801A008
// Адрес места в памяти для хранения размера Text2
#define SIZE_TEXT2_address     	0x801A058
// Адрес места в памяти для хранения Text2
#define TEXT2_address          	0x801A05C
// Адрес места в памяти для хранения количества фреймов(для аудиофайла)
#define BLOCK_address          	0x801A0AC
// Адрес места в памяти для хранения аудиофайла
#define SPEEX_address          	0x801A0B0

#define STATE_MEMORY_SIZE		4
#define SIZE_TEXT1_MEMORY_SIZE	4
#define TEXT1_MEMORY_SIZE		80
#define SIZE_TEXT2_MEMORY_SIZE	4
#define TEXT2_MEMORY_SIZE		80
#define BLOCK_MEMORY_SIZE		4

// Если мы получил текст, место или кол-во фреймов(speex), то занимаем 16 байт
#define TEXTSIZE               	16
// Если мы получили speex данные, то прибавляем размер speex пакета
#define AUDIOSIZE              	20
// Максимальное число байт, которое может уместиться на странице флеша
#define MEMORY_PAGE_SIZE  	   	2048
// Размер буфера, в который записываются принимаемые по USART данные
#define SIZE_BUFF               60
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/


/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*--------------------------------BUTTON--------------------------------------*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
// Количество опросов состояния кнопки для программного антидребезга
#define NUMBER_OF_POLLS 		10
// Вывод МК, на который будет цепляться кнопка
#define BUTTON_GPIO_PORT        GPIOA
#define BUTTON_GPIO_PIN         GPIO_PIN_11
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
/*||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||*/
#endif
